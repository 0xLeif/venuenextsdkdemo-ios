# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools

default_platform(:ios)

platform :ios do
  before_all do
    setup_circle_ci
  end

  lane :forceMatch do |options|
    match(type: "enterprise", git_branch: "enterprise", app_identifier: "com.venuenext.demoapp", team_id: "4DL8PZB55U", username: "build@venuenext.com", force: true)
  end


  desc "Create an enterprise build of the VNSDK demo app"
  lane :enterprise do |options|
    update_info_plist(
      plist_path: 'VenueNextSDK-Demo/Info.plist', # Path to info plist file
      app_identifier: "com.venuenext.demoapp" # The App Identifier
    )
    # match(type: "enterprise", git_branch: "enterprise", app_identifier: "com.venuenext.demoapp", team_id: "4DL8PZB55U", username: "build@venuenext.com")
    version_number = prompt(text: "Version # (eg. 2.2)")
    build_number = prompt(text: "Build # (eg. 150)")
    app_name = "VenueNextSDK-Demo"
    ipa_name = "#{app_name}-#{version_number}.#{build_number}.ipa"
    gym(
      scheme: "VenueNextSDK-Demo",
      output_directory: "./build",
      output_name: ipa_name,
      export_method: "enterprise"
    )
    demo_appcenter
  end

  lane :demo_appcenter do |options|
    token = ENV["APPCENTER_API_TOKEN"],
    ipa_path = lane_context[SharedValues::IPA_OUTPUT_PATH]
    appcenter_upload(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: "IOS-Demo",
      app_name: "VenueNextSDK-DemoApp",
      ipa: ipa_path,
      destinations: ("Internal" if ENV["DESTINATION_GROUP"].to_s.empty? || ENV["DESTINATION_GROUP"].nil?),
      destination_type: "group",
      release_notes: prompt(text: "Release Notes: ", multi_line_end_keyword: "END"),
      notify_testers: false,
      version: options[:version],
      build_number: options[:build]
    )
    clean
  end

  lane :clean do
    Dir.chdir("..") do
      sh "rm -r ./build"
    end
  end
end

