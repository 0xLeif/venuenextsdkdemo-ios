// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.2 (swiftlang-1100.0.278 clang-1100.0.33.9)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VenueNextPayment
import Foundation
import Swift
import VenueNextCore
import VenueNextNetworkService
@_exported import VenueNextPayment
import os
@objc open class GetPaymentMethodParser : ObjectiveC.NSObject {
  public static func parse(data: Foundation.Data) throws -> VenueNextPayment.VNPaymentMethodRepresentable?
  @objc override dynamic public init()
  @objc deinit
}
public struct VNPaymentMethodRepresentable : Swift.Decodable {
  public var nonce: Swift.String?
  public var instrumentType: Swift.String?
  public var cardType: Swift.String?
  public var lastFour: Swift.String?
  public var cardHolderName: Swift.String?
  public var token: Swift.String?
  public var userUUID: Swift.String?
  public init(nonce: Swift.String, instrumentType: Swift.String)
  public var cardDescription: Swift.String? {
    get
  }
  public init(from decoder: Swift.Decoder) throws
}
@objc public class VNPayment : ObjectiveC.NSObject {
  @objc public static let shared: VenueNextPayment.VNPayment
  public func getPaymentToken(for identifier: Swift.String? = nil, completion: @escaping (Swift.Result<Swift.String, VenueNextNetworkService.VNAnyError>) -> Swift.Void)
  public func postPaymentMethod(for userID: Swift.String, paymentMethod: VenueNextCore.PaymentMethodRepresentable, completion: @escaping (Foundation.Data?, VenueNextNetworkService.VNAnyError?) -> Swift.Void)
  public func getPaymentMethod(userUUID: Swift.String, completion: @escaping (Foundation.Data?, Swift.Error?) -> Swift.Void)
  public static func storePaymentMethod(userUUID: Swift.String, paymentMethodRepresentable: VenueNextCore.PaymentMethodRepresentable, completion: @escaping ((VenueNextPayment.VNPaymentMethodRepresentable?, Swift.Error?) -> Swift.Void))
  @objc public func deletePaymentMethod(userUUID: Swift.String, completion: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc override dynamic public init()
  @objc deinit
}
